name: Publish Beta Package

on:
  pull_request:
    branches:
      - 'release/2.x'
    types:
      - closed

jobs:
  publish_beta:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PROTECT_WRITE_TOKEN }}

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'

    - name: Configure Git Identity
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Install Dependencies
      run: yarn install --frozen-lockfile

    - name: build
      run: yarn build

    - name: Get Package Information
      id: package_info
      run: |
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        PACKAGE_BASE_VERSION=$(node -p "require('./package.json').version" | cut -d '-' -f 1)
        echo "PACKAGE_NAME=${PACKAGE_NAME}" >> $GITHUB_ENV
        echo "PACKAGE_BASE_VERSION=${PACKAGE_BASE_VERSION}" >> $GITHUB_ENV

    - name: Get Latest Beta Version
      id: latest_version
      run: |
        existing_versions=$(npm show $PACKAGE_NAME versions --json | jq -r '.[]' | grep -E "^${PACKAGE_BASE_VERSION}-beta-" || true )
        if [ -z "$existing_versions" ]; then
          echo "LATEST_VERSION=${PACKAGE_BASE_VERSION}" >> $GITHUB_ENV
        else
          latest_version=$(echo "$existing_versions" | sort -V | tail -n 1)
          echo "LATEST_VERSION=${latest_version}" >> $GITHUB_ENV
        fi
    - name: Calculate Next Beta Version
      id: next_version
      run: |
        if [ "$LATEST_VERSION" = "${PACKAGE_BASE_VERSION}" ]; then
          next_version="${PACKAGE_BASE_VERSION}-beta-0"
        else
          beta_number=$(echo "${LATEST_VERSION}" | tr '-' ' ' | awk '{print $NF}')
          next_beta=$((beta_number + 1))
          next_version="${PACKAGE_BASE_VERSION}-beta-${next_beta}"
        fi
        echo "NEXT_VERSION=${next_version}" >> $GITHUB_ENV

    - name: Update Package.json with Next Version
      run: |
        npm version "${NEXT_VERSION}" --no-git-tag-version

    - name: Publish Package
      run: npm publish --access public --tag beta
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Commit Changes
      run: |
        git add .
        git commit -m "chore(release): ${NEXT_VERSION}"
        git log -1  # 检查最后的commit结果

    - name: Push
      # 使用个人访问令牌来推送更改以避免保护分支限制
      run: |
        git push https://x-access-token:${{ secrets.PROTECT_WRITE_TOKEN }}@github.com/${{ github.repository }} HEAD:${{github.ref}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}